const handler = async (m, { conn, usedPrefix, command, args, isOwner, isAdmin, isROwner }) => {
  const datas = global;
  const idioma = datas.db.data.users[m.sender].language;

  const optionsFull = `ุงูุฎูุงุฑ:* โจ | ุงูุชุฑุญูุจ
*ุงูุงูุฑ:* ${usedPrefix + command} ุงูุชุฑุญูุจ
*ุงููุตู:* ูุชุญ ุงู ููู ุงูุชุฑุญูุจ ูู ุงูุฌุฑูุจ.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ููุฏ ุงูุนุงู
*ุงูุงูุฑ:* ${usedPrefix + command} ุนุงู
*ุงููุตู:* ูุตุจุญ ุงูุจูุช ุนููุง ุงู ุฎุงุตุง.
*ุงูุญุงูู:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุงูุฑ ุงูุง ุจูุงุณุทู ุงููุทูุฑ.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ูุถุงุฏ ุงูููููุงุช
*ุงูุงูุฑ:* ${usedPrefix + command} ูุถุงุฏุงูููููุงุช
*ุงูุญุงูู:* ุชุดุบูู ุงู ุงููุงู ูุถุงุฏ ููููุงุช ุงููุงุชุณ.
*ุงูุญุงูู:* ูุฌุจ ุงู ูููู ููุนูุง.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ูุถุงุฏ ุงููููุงุช 2
*ุงูุงูุฑ:* ${usedPrefix + command} ูุถุงุฏุงูููููุงุช2
*ุงููุตู:* ุชุดุบูู ูุง ุงูุงู ูุถุงุฏ ุงู ูููุงุช.
*ุงูุญุงูู:* ูุฌุจ ุงู ูููู ููุนูุง.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ูุดู
*ุงูุงูุฑ:* ${usedPrefix + command} ูุดู
*:* ุชูุดูุท ุงู ุงูุบุงุก ุงูุชุนุฏูู ุนูู ุงููุตู.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ูุดู 2
*ุงูุงูุฑ:* ${usedPrefix + command} ูุดู2
*ุงููุตู:* ููุดู ุงูุชุนุฏููุงุช ูู ุงููุฌููุนู ู ูุญุงูุธ ุนูู ุงุฏุงุฑู ุงูุถู.

--------------------------------

*ุงูุฎูุงุฑ:* โ | ูููุฏ
*ุงูุงูุฑ:* ${usedPrefix + command} ุชููุฏ
*ูุตู:* ูุชุญ ุงู ููู ูููุฏ ุงูุจูุช ูุซูุง  ูุทุฑุฏ ู ูุถููู.
*ุญุงูู:* ุงููุทูุฑ ุจุณ ุงูู ูุณุชุนูู ุงูุงูุฑ ุฏู.

--------------------------------

*ุงูุฎูุงุฑ:* โ๏ธ | ุงููุฑุงุฆู ุงูุชููุงุฆู
*ุงูุงูุฑ:* ${usedPrefix + command} ุงูุตุญูู
*ุงููุตู:* ูุชุญ ุงู ููู ุงููุฑุงุฆู ุงูุชููุงุฆู.
*ุงูุญุงูู:* ุงููุทูุฑ ุจุณ ุงูู ุจูุชุณุนูู ุงูุงูุฑ ุฏู.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ |  ุงุตูุงุช
*ุงูุงูุฑ:* ${usedPrefix + command} ุงุตูุงุช
*ุงููุตู:* ูุชุญ ุงู ููู ุงูุฑููุงุช ูู ุงูุฌุฑูุจ.

--------------------------------

*ุงูุฎูุงุฑ:* ๐พ | ุณุชููุฑ ุชููุงุฆู
*ุงูุงูุฑ:* ${usedPrefix + command} ุณุชููุฑุชููุงุฆู 
*ุงููุตู:*ุชุตุจุญ ุฌููุน ุงูุตูุฑ ุฃู ููุงุทุน ุงูููุฏูู ุงููุฑุณูุฉ ูู ุงููุฌููุนุฉ ููุตูุงุช. 

--------------------------------

*ุงูุฎูุงุฑ:* ๐ฌ | ุฎุงุต ููุท
*ุงูุงูุฑ:* ${usedPrefix + command} ุจุฑุงููุช
*ุงููุตู:* ุณูู ูุณุชุฌูุจ ุงูุจูุช ูู ุงูุฎุงุต ุจุณ.
*ุงูุญุงูู:* ุงููุทูุฑ ุจุณ ุงูู ููุฏุฑ ูุณุชุนูู ุงูุงูุฑ ุฏู.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ข | ุฌุฑูุจุงุช ููุท
*ุงูุงูุฑ:* ${usedPrefix + command} ุฌุฑูุจุงุช
*ุงููุตู:* ุงูุจูุช ููุดุชุบู ูู ุงูุฌุฑูุจุงุช ุจุณ. 
*ุงูุญุงูู:* ุงููููุฑ ุจุณ ุงูู ูุณุชุฎุฏู ุงูุงูุฑ ุฏู.

--------------------------------

*ุงูุฎูุงุฑ:* โ | ูุถุงุฏ ุงูุงุฎูุงุก
*ุงูุงูุฑ:* ${usedPrefix + command} ูุถุงุฏุงูุงุฎูุงุก
*ุงููุตู:* ุงูุตูุฑู ุงู ุงูููุฏูู ุงูุฐู ูุจุนุช ููุฑุง ูุฑู ูุงุญุฏู ูุจุนุช ูู ุงูุจูุช ูุฑู ุงุฎุฑู ุจุดูู ุทุจูุนู. 

--------------------------------

*ุงูุฎูุงุฑ:* ๐ต | ููููุน ุงูุงุชุตุงู
*ุงูุงูุฑ:* ${usedPrefix + command} ูุถุงุฏุงูุงุชุตุงู
*ุงููุตู:* ูุจูู ุงู ุญุฏ ูุฑู ุนูู ุฑูู ุงูุจูุช. 
*ุงูุญุงูู:* ุงููุทูุฑ ุจุณ ุงูู ูุณุชุฎุฏู ุงูุงูุฑ ุฏู.

--------------------------------

*ุงูุฎุงูู:* ๐ฌ | ูุถุงุฏ ุงูุฎุงุต
*ุงูุงูุฑ:* ${usedPrefix + command} ูุถุงุฏุงูุฎุงุต
*ุงููุตู:* ูุจูู ุงู ุญุฏ ูููู ุงูุจูุช ุฎุงุต. 
*ุงูุญุงูู:* ุงููุทูุฑ ุจุณ ุงูู ูุณุชุฎุฏู ุงูุงูุฑุฏ ุฏู.

--------------------------------

*ุงูุฎูุงุฑ:* ๐คฌ | ูุถุงุฏ ุงูุดุชุงุฆู
*ุงูุงูุฑ:* ${usedPrefix + command} ูุถุงุฏุงูุดุชุงุฆู
*ุงููุตู:* ูููู ุจุชุญุฐูุฑ ุงู ุดุฎุต ุณุจ ุงู ุดุชู ุงู ูุชุจ ุดุฆ ุนูุจ ูุงุฐุง ุชุฌุงูุฐ ุงูุชุญุฐูุฑุงุช ูููู ุจุทุฑุฏู.
*ุงูุญุงูู:* ูุฌุจ ุงู ูููู ุงูุชููุฏ ููุนูุง.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ค | ุงูุจูุช ุงููุฑุนู
*ุงูุงูุฑ:* ${usedPrefix + command} ุงูุจูุช-ุงููุฑุนู
*ุงูุญุงูู:* ุชูุนูู ู ุงูุงู ุงูุฑ (${usedPrefix}serbot / ${usedPrefix}jadibot). 
*ุงูุญุงูู:* ุงููุทูุฑ ุจุณ ุงูู ููุฏุฑ ูุณุชุนูู ุงูุงูุฑ ุฏู.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ุงูุงุฏูู
*ุงูุงูุฑ:* ${usedPrefix + command} ุงูุงุฏูู-ููุท
*ุงููุตู:* ุณูู ูุฌูุจ ุงูุจูุช ุนูู ุงูุงุฏูู ููุท.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ุณูุณูู
*ุงูุงูุฑ:* ${usedPrefix + command} ุณูุณูู
*ุงููุตู:* ููุจุฏุง ุงูุจูุช ูุฑุฏ ุจุงุณุชุฎุฏุงู ุงูุฐูุงุก ุงูุตุชูุงุนู ุณูุณูู.

--------------------------------

*ุงูุฎูุงุฑ:* โณ | ูุถุงุฏ ุงูุงุณุจุงู
*ุงูุงูุฑ:* ${usedPrefix + command} ูุถุงุฏุงูุงุณุจุงู
*ุงููุตู:* ููุชุดู ุงูุจูุช ุจุนุฏ ุงุฑุณุงู 5 ุฑุณุงุฆู ู ูุญุธุฑ ุงููุณุชุฎุฏู.
*ุงูุฎุงูู:* ุงููุทูุฑ ุจุณ ุงูู ูุณุชุฎุฏู ุงูุงูุฑ ุฏู.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ก๏ธ | ูุถุงุฏ ุงูุญุฐู
*ุงูุงูุฑ:* ${usedPrefix + command} ูุถุงุฏุงูุญุฐู
*ุงููุตู:* ููุชุดู ุงูุจูุช ุงูุฑุณุงูู ุงููุญุฐููู ู ูููู ุจุชุญููููุง ูููุณุชุฎุฏู.

--------------------------------

*ุงูุฎูุงุฑ:* ๐ | ุตูุช_ุจูุช
*ุงูุงูุฑ:* ${usedPrefix + command} ุงุตูุงุช_ุงูุจูุช
*ุงููุตู:* ูุชู ุงูุบุงุก ุฌููุนุฑุงูุตูุงุช ุงูุฎุงุตู ุจุงูุจูุช .
*ุงูุญุงูู:* ุงููุทูุฑ ุจุณ ุงูู ูุณุชุฎุฏู ุงูุงูุฑ ุฏู..
`.trim();

  const isEnable = /ูุนู/i.test(command);
  const isDisable = /ุนุทู/i.test(command);
  if (!isEnable && !isDisable) return await conn.sendMessage(m.chat, { text: optionsFull }, { quoted: m });
  const chat = global.db.data.chats[m.chat];
  const user = global.db.data.users[m.sender];
  const bot = global.db.data.settings[conn.user.jid] || {};
  const type = (args[0] || '').toLowerCase();
  let isAll = false;
  const isUser = false;
  switch (type) {
    case 'ุงูุชุฑุญูุจ': // welcome
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!(isAdmin || isOwner || isROwner)) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.welcome = isEnable;
      break;
    case 'ูุดู': // detect
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!isAdmin) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.detect = isEnable;
      break;
    case 'ูุดู2': // detect2
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!isAdmin) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.detect2 = isEnable;
      break;
    case 'ุณูุณู': // simsimi
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.simi = isEnable;
      break;
    case 'ูุงูุน_ุฅุจุงุญูุฉ': // antiporno
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiporno = isEnable;
      break;
    case 'ุญุฐู': // delete
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.delete = isEnable;
      break;
    case 'ูุถุงุฏ_ุงูุญุฐู': // antidelete
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antidelete = isEnable;
      break;
    case 'ุนุงู': // public
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['self'] = !isEnable;
      break;
    case 'ูุงูุน ุงูุฑูุงุจุท': // antilink
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiLink = isEnable;
      break;
    case 'ูุงูุน ุงูุฑูุงุจุท2': // antilink2
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiLink2 = isEnable;
      break;
    case 'ูุถุงุฏ ุงูุนุฑุถ': // antiviewonce
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiviewonce = isEnable;
      break;
    case 'ูุถุน_ุบูุฑ_ูุงุฆู': // modohorny
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.modohorny = isEnable;
      break;
    case 'ูุถุน_ุงูุฃุฏูู': // modoadmin
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.modoadmin = isEnable;
      break;
    case 'ุงูููุตูุงุช_ุงูุชููุงุฆูุฉ': // autosticker
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.autosticker = isEnable;
      break;
    case 'ุงูุฃุตูุงุช': // audios
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.audios = isEnable;
      break;
    case 'ุชูููุฏ': // restrict
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.restrict = isEnable;
      break;
    case 'ุฃุตูุงุช_ุงูุจูุช': // audios_bot
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.audios_bot = isEnable;
      break;
    case 'ูุถุน_ุงูุฐูุงุก_ุงูุตูุงุนู': // modoia
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.modoia = isEnable;
      break;
    case 'ุงูุงุณุชูุงุน': // nyimak
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['nyimak'] = isEnable;
      break;
    case 'ูุฑุงุกุฉ_ุชููุงุฆูุฉ': // autoread
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.autoread2 = isEnable;
      break;
    case 'ุฎุงุต_ููุท': // pconly
    case 'ุฎุงุต': // privateonly
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['pconly'] = isEnable;
      break;
    case 'ูุฌููุนุงุช_ููุท': // gconly
    case 'ูุฌููุนุงุช': // grouponly
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['gconly'] = isEnable;
      break;
    case 'ุญุงูุฉ_ููุท': // swonly
    case 'ุญุงูุฉ': // statusonly
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['swonly'] = isEnable;
      break;
    case 'ูุงูุน_ุงูููุงููุงุช': // anticall
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.antiCall = isEnable;
      break;
    case 'ูุงูุน_ุงูุฎุงุต': // antiprivado
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.antiprivado = isEnable;
      break;
    case 'ูุถุน_ุงูุนุจุงุฑุงุช': // modejadibot
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.modejadibot = isEnable;
      break;
    case 'ุฃูุนุงุจ': // juegos
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.juegos = isEnable;
      break;
    case 'ูุงูุน_ุงูุฃุฑูุงู_ุงููุฒููุฉ': // antifake
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.antifake = isEnable;
      break;
    default:
      return await conn.sendMessage(m.chat, { text: optionsFull }, { quoted: m });
  }
  conn.sendMessage(m.chat, {
    text: `_*ุชู ุชุบููุฑ ุงูุฅุนุฏุงุฏุงุช ุจูุฌุงุญ*_\n\n*ุชู ${isEnable ? 'ุชูุนูู' : 'ุชุนุทูู'} ${type}* ุจูุฌุงุญ.`,
  }, { quoted: m });
};

handler.command = /^(ูุนู|ุนุทู)$/i;
export default handler;